// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ADVIOS_receive (
        ap_clk,
        ap_rst,
        inCtrl,
        inSwitch,
        outLeds,
        outLeds_ap_vld,
        ADVIOS_counter_V,
        ADVIOS_counter_V_ap_vld,
        ADVIOS_ledValue_V,
        ADVIOS_ledValue_V_ap_vld
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input  [3:0] inCtrl;
input  [3:0] inSwitch;
output  [3:0] outLeds;
output   outLeds_ap_vld;
output  [31:0] ADVIOS_counter_V;
output   ADVIOS_counter_V_ap_vld;
output  [3:0] ADVIOS_ledValue_V;
output   ADVIOS_ledValue_V_ap_vld;

reg[3:0] outLeds;
reg outLeds_ap_vld;
reg[31:0] ADVIOS_counter_V;
reg ADVIOS_counter_V_ap_vld;
reg[3:0] ADVIOS_ledValue_V;
reg ADVIOS_ledValue_V_ap_vld;

wire   [0:0] tmp_fu_166_p2;
reg   [0:0] tmp_reg_231;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_3_fu_178_p2;
reg   [0:0] tmp_3_reg_238;
reg   [3:0] ADVIOS_ledValue_V_lo_1_phi_fu_131_p4;
reg   [3:0] ADVIOS_ledValue_V_lo_1_reg_128;
wire   [0:0] tmp_1_fu_172_p2;
wire   [3:0] v_V_1_fu_191_p2;
reg   [3:0] ADVIOS_ledValue_V_lo_2_phi_fu_142_p4;
reg   [3:0] ADVIOS_ledValue_V_lo_2_reg_139;
wire    ap_CS_fsm_state4;
reg   [31:0] ADVIOS_counter_V_loa_fu_84;
wire    ap_CS_fsm_state2;
wire   [31:0] tmp_5_fu_200_p2;
reg   [3:0] v_V_fu_88;
wire   [3:0] r_V_fu_184_p2;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_231 == 1'd1))) begin
        ADVIOS_counter_V_loa_fu_84 <= tmp_5_fu_200_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state3) & (tmp_fu_166_p2 == 1'd1) & (tmp_3_fu_178_p2 == 1'd1)))) begin
        ADVIOS_counter_V_loa_fu_84 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_fu_166_p2 == 1'd1))) begin
        if ((tmp_1_fu_172_p2 == 1'd0)) begin
            ADVIOS_ledValue_V_lo_1_reg_128 <= v_V_fu_88;
        end else if ((1'd1 == tmp_1_fu_172_p2)) begin
            ADVIOS_ledValue_V_lo_1_reg_128 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_fu_166_p2 == 1'd1) & (tmp_3_fu_178_p2 == 1'd0))) begin
        ADVIOS_ledValue_V_lo_2_reg_139 <= ADVIOS_ledValue_V_lo_1_phi_fu_131_p4;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_231 == 1'd1) & (tmp_3_reg_238 == 1'd1))) begin
        ADVIOS_ledValue_V_lo_2_reg_139 <= v_V_1_fu_191_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_231 == 1'd1))) begin
        v_V_fu_88 <= ADVIOS_ledValue_V_lo_2_phi_fu_142_p4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        v_V_fu_88 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_fu_166_p2 == 1'd1))) begin
        tmp_3_reg_238 <= tmp_3_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_reg_231 <= tmp_fu_166_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_231 == 1'd1))) begin
        ADVIOS_counter_V = tmp_5_fu_200_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_fu_166_p2 == 1'd1) & (tmp_3_fu_178_p2 == 1'd1))) begin
        ADVIOS_counter_V = 32'd0;
    end else begin
        ADVIOS_counter_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (tmp_fu_166_p2 == 1'd1) & (tmp_3_fu_178_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_reg_231 == 1'd1)))) begin
        ADVIOS_counter_V_ap_vld = 1'b1;
    end else begin
        ADVIOS_counter_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_231 == 1'd1) & (tmp_3_reg_238 == 1'd1))) begin
        ADVIOS_ledValue_V = v_V_1_fu_191_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_fu_166_p2 == 1'd1) & (1'd1 == tmp_1_fu_172_p2))) begin
        ADVIOS_ledValue_V = 4'd0;
    end else begin
        ADVIOS_ledValue_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (tmp_fu_166_p2 == 1'd1) & (1'd1 == tmp_1_fu_172_p2)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_reg_231 == 1'd1) & (tmp_3_reg_238 == 1'd1)))) begin
        ADVIOS_ledValue_V_ap_vld = 1'b1;
    end else begin
        ADVIOS_ledValue_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_fu_166_p2 == 1'd1))) begin
        if ((tmp_1_fu_172_p2 == 1'd0)) begin
            ADVIOS_ledValue_V_lo_1_phi_fu_131_p4 = v_V_fu_88;
        end else if ((1'd1 == tmp_1_fu_172_p2)) begin
            ADVIOS_ledValue_V_lo_1_phi_fu_131_p4 = 4'd0;
        end else begin
            ADVIOS_ledValue_V_lo_1_phi_fu_131_p4 = 'bx;
        end
    end else begin
        ADVIOS_ledValue_V_lo_1_phi_fu_131_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_231 == 1'd1) & (tmp_3_reg_238 == 1'd1))) begin
        ADVIOS_ledValue_V_lo_2_phi_fu_142_p4 = v_V_1_fu_191_p2;
    end else begin
        ADVIOS_ledValue_V_lo_2_phi_fu_142_p4 = ADVIOS_ledValue_V_lo_2_reg_139;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_231 == 1'd1) & (tmp_3_reg_238 == 1'd1))) begin
        outLeds = v_V_1_fu_191_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_231 == 1'd0))) begin
        outLeds = r_V_fu_184_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_fu_166_p2 == 1'd1) & (1'd1 == tmp_1_fu_172_p2))) begin
        outLeds = 4'd0;
    end else begin
        outLeds = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (tmp_fu_166_p2 == 1'd1) & (1'd1 == tmp_1_fu_172_p2)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_reg_231 == 1'd1) & (tmp_3_reg_238 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_reg_231 == 1'd0)))) begin
        outLeds_ap_vld = 1'b1;
    end else begin
        outLeds_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign r_V_fu_184_p2 = (inSwitch & inCtrl);

assign tmp_1_fu_172_p2 = ((inSwitch == 4'd8) ? 1'b1 : 1'b0);

assign tmp_3_fu_178_p2 = ((ADVIOS_counter_V_loa_fu_84 > 32'd99999999) ? 1'b1 : 1'b0);

assign tmp_5_fu_200_p2 = (ADVIOS_counter_V_loa_fu_84 + 32'd1);

assign tmp_fu_166_p2 = ((inCtrl == 4'd0) ? 1'b1 : 1'b0);

assign v_V_1_fu_191_p2 = (ADVIOS_ledValue_V_lo_1_reg_128 + 4'd1);

endmodule //ADVIOS_receive
