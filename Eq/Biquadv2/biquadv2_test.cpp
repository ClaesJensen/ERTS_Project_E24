#include "biquadv2.hpp"
#include <stdio.h>

#define TEST_SIZE 128
void biquadv2(inData_t, outData_t*);


int main() {
	printf("Start\n");
	inData_t inData[TEST_SIZE] = {
			0.130526,0.258819,0.382683,0.500000,0.608761,0.707107,0.793353,0.866025,0.923880,0.965926,0.991445,1.000000,0.991445,0.965926,0.923880,0.866025,0.793353,0.707107,0.608761,0.500000,0.382683,0.258819,0.130526,0.000000,-0.130526,-0.258819,-0.382683,-0.500000,-0.608761,-0.707107,-0.793353,-0.866025,-0.923880,-0.965926,-0.991445,-1.000000,-0.991445,-0.965926,-0.923880,-0.866025,-0.793353,-0.707107,-0.608761,-0.500000,-0.382683,-0.258819,-0.130526,-0.000000,0.130526,0.258819,0.382683,0.500000,0.608761,0.707107,0.793353,0.866025,0.923880,0.965926,0.991445,1.000000,0.991445,0.965926,0.923880,0.866025,0.793353,0.707107,0.608761,0.500000,0.382683,0.258819,0.130526,0.000000,-0.130526,-0.258819,-0.382683,-0.500000,-0.608761,-0.707107,-0.793353,-0.866025,-0.923880,-0.965926,-0.991445,-1.000000,-0.991445,-0.965926,-0.923880,-0.866025,-0.793353,-0.707107,-0.608761,-0.500000,-0.382683,-0.258819,-0.130526,-0.000000,0.130526,0.258819,0.382683,0.500000,0.608761,0.707107,0.793353,0.866025,0.923880,0.965926,0.991445,1.000000,0.991445,0.965926,0.923880,0.866025,0.793353,0.707107,0.608761,0.500000,0.382683,0.258819,0.130526,0.000000,-0.130526,-0.258819,-0.382683,-0.500000,-0.608761,-0.707107,-0.793353,-0.866025,
	};

	outData_t expectedOutData[TEST_SIZE] = {
			0.119497,0.216928,0.294495,0.354340,0.398522,0.428994,0.447597,0.456044,0.455920,0.448675,0.435627,0.417959,0.396731,0.372875,0.347210,0.320443,0.293180,0.265932,0.239123,0.213099,0.188135,0.164443,0.142178,0.121449,0.102321,0.084823,0.068953,0.054684,0.041971,0.030748,0.020941,0.012463,0.005222,-0.000877,-0.005931,-0.010038,-0.013294,-0.015792,-0.017620,-0.018863,-0.019600,-0.019906,-0.019848,-0.019490,-0.018886,-0.018089,-0.017143,-0.016088,-0.014960,-0.013788,-0.012598,-0.011412,-0.010247,-0.009119,-0.008039,-0.007015,-0.006054,-0.005161,-0.004338,-0.003586,-0.002905,-0.002294,-0.001750,-0.001270,-0.000852,-0.000491,-0.000183,0.000075,0.000289,0.000462,0.000599,0.000703,0.000778,0.000829,0.000858,0.000869,0.000864,0.000846,0.000819,0.000783,0.000741,0.000694,0.000644,0.000593,0.000541,0.000490,0.000439,0.000390,0.000343,0.000299,0.000258,0.000219,0.000184,0.000152,0.000122,0.000096,0.000073,0.000052,0.000035,0.000019,0.000006,-0.000005,-0.000014,-0.000021,-0.000027,-0.000031,-0.000034,-0.000036,-0.000038,-0.000038,-0.000038,-0.000037,-0.000035,-0.000034,-0.000032,-0.000030,-0.000028,-0.000026,-0.000023,-0.000021,-0.000019,-0.000017,-0.000015,-0.000013,-0.000011,-0.000009,-0.000008,-0.000006,
	};

	outData_t result[TEST_SIZE];

	//Processing
	for (int i = 0; i < TEST_SIZE; i++) {
		biquadv2(inData[i], &result[i]);
	}

	//Printing result
	for (int i = 0; i < TEST_SIZE; i++) {
        if (expectedOutData[i].to_int64() == result[i].to_int64()) {
            printf("%f | %f | %i\n", expectedOutData[i].to_float(), result[i].to_float(), 1);
        }
        else {
            printf("%f | %f | %i\n", expectedOutData[i].to_float(), result[i].to_float(), 0);
        }
	}

	return 0;
}
