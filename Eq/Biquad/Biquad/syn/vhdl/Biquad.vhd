-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Biquad is
port (
    inClk : IN STD_LOGIC;
    inReset : IN STD_LOGIC;
    inData : IN STD_LOGIC_VECTOR (31 downto 0);
    outData : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Biquad is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Biquad,hls_ip_2017_2,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.912000,HLS_SYN_LAT=17,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=4,HLS_SYN_FF=507,HLS_SYN_LUT=275}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal grp_Biquad_process_fu_58_outData : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Biquad_process_fu_58_outData_ap_vld : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";

    component Biquad_process IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        inData : IN STD_LOGIC_VECTOR (31 downto 0);
        outData : OUT STD_LOGIC_VECTOR (31 downto 0);
        outData_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_Biquad_process_fu_58 : component Biquad_process
    port map (
        ap_clk => inClk,
        ap_rst => inReset,
        inData => inData,
        outData => grp_Biquad_process_fu_58_outData,
        outData_ap_vld => grp_Biquad_process_fu_58_outData_ap_vld);





    outData_assign_proc : process(inClk)
    begin
        if (inClk'event and inClk =  '1') then
            if ((ap_const_logic_1 = grp_Biquad_process_fu_58_outData_ap_vld)) then 
                outData <= grp_Biquad_process_fu_58_outData;
            end if; 
        end if;
    end process;

    ap_CS_fsm <= ap_const_lv2_0;
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
end behav;
