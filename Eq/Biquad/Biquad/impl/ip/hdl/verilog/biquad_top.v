// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps
module biquad_top (
s_axi_biquad_io_AWADDR,
s_axi_biquad_io_AWVALID,
s_axi_biquad_io_AWREADY,
s_axi_biquad_io_WDATA,
s_axi_biquad_io_WSTRB,
s_axi_biquad_io_WVALID,
s_axi_biquad_io_WREADY,
s_axi_biquad_io_BRESP,
s_axi_biquad_io_BVALID,
s_axi_biquad_io_BREADY,
s_axi_biquad_io_ARADDR,
s_axi_biquad_io_ARVALID,
s_axi_biquad_io_ARREADY,
s_axi_biquad_io_RDATA,
s_axi_biquad_io_RRESP,
s_axi_biquad_io_RVALID,
s_axi_biquad_io_RREADY,
aresetn,
aclk
);

parameter C_S_AXI_BIQUAD_IO_ADDR_WIDTH = 5;
parameter C_S_AXI_BIQUAD_IO_DATA_WIDTH = 32;
parameter RESET_ACTIVE_LOW = 1;

input [C_S_AXI_BIQUAD_IO_ADDR_WIDTH - 1:0] s_axi_biquad_io_AWADDR ;
input s_axi_biquad_io_AWVALID ;
output s_axi_biquad_io_AWREADY ;
input [C_S_AXI_BIQUAD_IO_DATA_WIDTH - 1:0] s_axi_biquad_io_WDATA ;
input [C_S_AXI_BIQUAD_IO_DATA_WIDTH/8 - 1:0] s_axi_biquad_io_WSTRB ;
input s_axi_biquad_io_WVALID ;
output s_axi_biquad_io_WREADY ;
output [2 - 1:0] s_axi_biquad_io_BRESP ;
output s_axi_biquad_io_BVALID ;
input s_axi_biquad_io_BREADY ;
input [C_S_AXI_BIQUAD_IO_ADDR_WIDTH - 1:0] s_axi_biquad_io_ARADDR ;
input s_axi_biquad_io_ARVALID ;
output s_axi_biquad_io_ARREADY ;
output [C_S_AXI_BIQUAD_IO_DATA_WIDTH - 1:0] s_axi_biquad_io_RDATA ;
output [2 - 1:0] s_axi_biquad_io_RRESP ;
output s_axi_biquad_io_RVALID ;
input s_axi_biquad_io_RREADY ;

input aresetn ;

input aclk ;


wire [C_S_AXI_BIQUAD_IO_ADDR_WIDTH - 1:0] s_axi_biquad_io_AWADDR;
wire s_axi_biquad_io_AWVALID;
wire s_axi_biquad_io_AWREADY;
wire [C_S_AXI_BIQUAD_IO_DATA_WIDTH - 1:0] s_axi_biquad_io_WDATA;
wire [C_S_AXI_BIQUAD_IO_DATA_WIDTH/8 - 1:0] s_axi_biquad_io_WSTRB;
wire s_axi_biquad_io_WVALID;
wire s_axi_biquad_io_WREADY;
wire [2 - 1:0] s_axi_biquad_io_BRESP;
wire s_axi_biquad_io_BVALID;
wire s_axi_biquad_io_BREADY;
wire [C_S_AXI_BIQUAD_IO_ADDR_WIDTH - 1:0] s_axi_biquad_io_ARADDR;
wire s_axi_biquad_io_ARVALID;
wire s_axi_biquad_io_ARREADY;
wire [C_S_AXI_BIQUAD_IO_DATA_WIDTH - 1:0] s_axi_biquad_io_RDATA;
wire [2 - 1:0] s_axi_biquad_io_RRESP;
wire s_axi_biquad_io_RVALID;
wire s_axi_biquad_io_RREADY;

wire aresetn;


wire [32 - 1:0] sig_Biquad_inData;
wire [32 - 1:0] sig_Biquad_outData;

wire sig_Biquad_inReset;



Biquad Biquad_U(
    .inData(sig_Biquad_inData),
    .outData(sig_Biquad_outData),
    .inReset(sig_Biquad_inReset),
    .inClk(aclk)
);

Biquad_biquad_io_if #(
    .C_ADDR_WIDTH(C_S_AXI_BIQUAD_IO_ADDR_WIDTH),
    .C_DATA_WIDTH(C_S_AXI_BIQUAD_IO_DATA_WIDTH))
Biquad_biquad_io_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .I_inData(sig_Biquad_inData),
    .O_outData(sig_Biquad_outData),
    .AWADDR(s_axi_biquad_io_AWADDR),
    .AWVALID(s_axi_biquad_io_AWVALID),
    .AWREADY(s_axi_biquad_io_AWREADY),
    .WDATA(s_axi_biquad_io_WDATA),
    .WSTRB(s_axi_biquad_io_WSTRB),
    .WVALID(s_axi_biquad_io_WVALID),
    .WREADY(s_axi_biquad_io_WREADY),
    .BRESP(s_axi_biquad_io_BRESP),
    .BVALID(s_axi_biquad_io_BVALID),
    .BREADY(s_axi_biquad_io_BREADY),
    .ARADDR(s_axi_biquad_io_ARADDR),
    .ARVALID(s_axi_biquad_io_ARVALID),
    .ARREADY(s_axi_biquad_io_ARREADY),
    .RDATA(s_axi_biquad_io_RDATA),
    .RRESP(s_axi_biquad_io_RRESP),
    .RVALID(s_axi_biquad_io_RVALID),
    .RREADY(s_axi_biquad_io_RREADY));

Biquad_inReset_if #(
    .RESET_ACTIVE_LOW(RESET_ACTIVE_LOW))
inReset_if_U(
    .dout(sig_Biquad_inReset),
    .din(aresetn));

endmodule
