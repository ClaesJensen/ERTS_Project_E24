// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "biquadv2start.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic biquadv2start::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic biquadv2start::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> biquadv2start::ap_ST_fsm_state1 = "1";
const sc_lv<17> biquadv2start::ap_ST_fsm_state2 = "10";
const sc_lv<17> biquadv2start::ap_ST_fsm_state3 = "100";
const sc_lv<17> biquadv2start::ap_ST_fsm_state4 = "1000";
const sc_lv<17> biquadv2start::ap_ST_fsm_state5 = "10000";
const sc_lv<17> biquadv2start::ap_ST_fsm_state6 = "100000";
const sc_lv<17> biquadv2start::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> biquadv2start::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> biquadv2start::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> biquadv2start::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> biquadv2start::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> biquadv2start::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> biquadv2start::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> biquadv2start::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> biquadv2start::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> biquadv2start::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> biquadv2start::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> biquadv2start::ap_const_lv32_F = "1111";
const int biquadv2start::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> biquadv2start::ap_const_lv32_7 = "111";
const sc_lv<32> biquadv2start::ap_const_lv32_8 = "1000";
const sc_lv<32> biquadv2start::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> biquadv2start::ap_const_lv32_3 = "11";
const sc_lv<32> biquadv2start::ap_const_lv32_4 = "100";
const sc_lv<1> biquadv2start::ap_const_lv1_0 = "0";
const sc_lv<32> biquadv2start::ap_const_lv32_5 = "101";
const sc_lv<32> biquadv2start::ap_const_lv32_6 = "110";
const sc_lv<32> biquadv2start::ap_const_lv32_9 = "1001";
const sc_lv<32> biquadv2start::ap_const_lv32_A = "1010";
const sc_lv<32> biquadv2start::ap_const_lv32_B = "1011";
const sc_lv<32> biquadv2start::ap_const_lv32_C = "1100";
const sc_lv<32> biquadv2start::ap_const_lv32_D = "1101";
const sc_lv<24> biquadv2start::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<3> biquadv2start::ap_const_lv3_0 = "000";
const bool biquadv2start::ap_const_boolean_0 = false;
const sc_lv<4> biquadv2start::ap_const_lv4_0 = "0000";
const sc_lv<4> biquadv2start::ap_const_lv4_1 = "1";
const sc_lv<32> biquadv2start::ap_const_lv32_1 = "1";
const sc_lv<4> biquadv2start::ap_const_lv4_2 = "10";
const sc_lv<4> biquadv2start::ap_const_lv4_3 = "11";
const sc_lv<32> biquadv2start::ap_const_lv32_2 = "10";
const sc_lv<4> biquadv2start::ap_const_lv4_4 = "100";
const sc_lv<4> biquadv2start::ap_const_lv4_5 = "101";
const sc_lv<4> biquadv2start::ap_const_lv4_A = "1010";
const sc_lv<1> biquadv2start::ap_const_lv1_1 = "1";
const sc_lv<4> biquadv2start::ap_const_lv4_8 = "1000";
const sc_lv<4> biquadv2start::ap_const_lv4_6 = "110";
const sc_lv<4> biquadv2start::ap_const_lv4_D = "1101";
const sc_lv<4> biquadv2start::ap_const_lv4_B = "1011";
const sc_lv<4> biquadv2start::ap_const_lv4_9 = "1001";
const sc_lv<32> biquadv2start::ap_const_lv32_E = "1110";
const sc_lv<4> biquadv2start::ap_const_lv4_7 = "111";
const sc_lv<4> biquadv2start::ap_const_lv4_E = "1110";
const sc_lv<32> biquadv2start::ap_const_lv32_10 = "10000";
const sc_lv<4> biquadv2start::ap_const_lv4_C = "1100";
const sc_lv<32> biquadv2start::ap_const_lv32_17 = "10111";
const sc_lv<3> biquadv2start::ap_const_lv3_5 = "101";
const sc_lv<3> biquadv2start::ap_const_lv3_1 = "1";
const sc_lv<32> biquadv2start::ap_const_lv32_32 = "110010";
const sc_lv<32> biquadv2start::ap_const_lv32_18 = "11000";
const sc_lv<32> biquadv2start::ap_const_lv32_2F = "101111";
const sc_lv<32> biquadv2start::ap_const_lv32_31 = "110001";
const sc_lv<2> biquadv2start::ap_const_lv2_3 = "11";
const sc_lv<32> biquadv2start::ap_const_lv32_30 = "110000";
const sc_lv<3> biquadv2start::ap_const_lv3_7 = "111";
const sc_lv<24> biquadv2start::ap_const_lv24_7FFFFF = "11111111111111111111111";
const sc_lv<24> biquadv2start::ap_const_lv24_800000 = "100000000000000000000000";
const bool biquadv2start::ap_const_boolean_1 = true;

biquadv2start::biquadv2start(sc_module_name name) : sc_module(name), mVcdFile(0) {
    array_r_U = new biquadv2start_arrbkb("array_r_U");
    array_r_U->clk(ap_clk);
    array_r_U->reset(ap_rst_n_inv);
    array_r_U->address0(array_r_address0);
    array_r_U->ce0(array_r_ce0);
    array_r_U->we0(array_r_we0);
    array_r_U->d0(array_r_d0);
    array_r_U->q0(array_r_q0);
    array_r_U->address1(array_r_address1);
    array_r_U->ce1(array_r_ce1);
    array_r_U->we1(array_r_we1);
    array_r_U->d1(array_r_d1);
    array_r_U->q1(array_r_q1);
    biquadv2start_biquadv2_s_axi_U = new biquadv2start_biquadv2_s_axi<C_S_AXI_BIQUADV2_ADDR_WIDTH,C_S_AXI_BIQUADV2_DATA_WIDTH>("biquadv2start_biquadv2_s_axi_U");
    biquadv2start_biquadv2_s_axi_U->AWVALID(s_axi_biquadv2_AWVALID);
    biquadv2start_biquadv2_s_axi_U->AWREADY(s_axi_biquadv2_AWREADY);
    biquadv2start_biquadv2_s_axi_U->AWADDR(s_axi_biquadv2_AWADDR);
    biquadv2start_biquadv2_s_axi_U->WVALID(s_axi_biquadv2_WVALID);
    biquadv2start_biquadv2_s_axi_U->WREADY(s_axi_biquadv2_WREADY);
    biquadv2start_biquadv2_s_axi_U->WDATA(s_axi_biquadv2_WDATA);
    biquadv2start_biquadv2_s_axi_U->WSTRB(s_axi_biquadv2_WSTRB);
    biquadv2start_biquadv2_s_axi_U->ARVALID(s_axi_biquadv2_ARVALID);
    biquadv2start_biquadv2_s_axi_U->ARREADY(s_axi_biquadv2_ARREADY);
    biquadv2start_biquadv2_s_axi_U->ARADDR(s_axi_biquadv2_ARADDR);
    biquadv2start_biquadv2_s_axi_U->RVALID(s_axi_biquadv2_RVALID);
    biquadv2start_biquadv2_s_axi_U->RREADY(s_axi_biquadv2_RREADY);
    biquadv2start_biquadv2_s_axi_U->RDATA(s_axi_biquadv2_RDATA);
    biquadv2start_biquadv2_s_axi_U->RRESP(s_axi_biquadv2_RRESP);
    biquadv2start_biquadv2_s_axi_U->BVALID(s_axi_biquadv2_BVALID);
    biquadv2start_biquadv2_s_axi_U->BREADY(s_axi_biquadv2_BREADY);
    biquadv2start_biquadv2_s_axi_U->BRESP(s_axi_biquadv2_BRESP);
    biquadv2start_biquadv2_s_axi_U->ACLK(ap_clk);
    biquadv2start_biquadv2_s_axi_U->ARESET(ap_rst_n_inv);
    biquadv2start_biquadv2_s_axi_U->ACLK_EN(ap_var_for_const0);
    biquadv2start_biquadv2_s_axi_U->b0_a0_V(b0_a0_V);
    biquadv2start_biquadv2_s_axi_U->b1_a0_V(b1_a0_V);
    biquadv2start_biquadv2_s_axi_U->b2_a0_V(b2_a0_V);
    biquadv2start_biquadv2_s_axi_U->a1_a0_V(a1_a0_V);
    biquadv2start_biquadv2_s_axi_U->a2_a0_V(a2_a0_V);
    biquadv2start_biquadv2_s_axi_U->inDataLeft_V(inDataLeft_V);
    biquadv2start_biquadv2_s_axi_U->inDataRight_V(inDataRight_V);
    biquadv2start_mulcud_U0 = new biquadv2start_mulcud<1,2,27,24,51>("biquadv2start_mulcud_U0");
    biquadv2start_mulcud_U0->clk(ap_clk);
    biquadv2start_mulcud_U0->reset(ap_rst_n_inv);
    biquadv2start_mulcud_U0->din0(grp_fu_279_p0);
    biquadv2start_mulcud_U0->din1(grp_fu_279_p1);
    biquadv2start_mulcud_U0->ce(ap_var_for_const0);
    biquadv2start_mulcud_U0->dout(grp_fu_279_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_OP1_V_fu_359_p1);
    sensitive << ( array_load_4_reg_921 );

    SC_METHOD(thread_OP2_V_1_fu_371_p1);
    sensitive << ( tmp_26_reg_946 );

    SC_METHOD(thread_OP2_V_fu_363_p1);
    sensitive << ( tmp_20_reg_926 );

    SC_METHOD(thread_Range1_all_ones_1_fu_668_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_14_fu_658_p4 );

    SC_METHOD(thread_Range1_all_ones_fu_474_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_7_fu_464_p4 );

    SC_METHOD(thread_Range1_all_zeros_1_fu_674_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_14_fu_658_p4 );

    SC_METHOD(thread_Range1_all_zeros_fu_480_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_7_fu_464_p4 );

    SC_METHOD(thread_Range2_all_ones_1_fu_652_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_13_fu_642_p4 );

    SC_METHOD(thread_Range2_all_ones_fu_458_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_6_fu_448_p4 );

    SC_METHOD(thread_addr1_cast_fu_354_p1);
    sensitive << ( addr1_fu_349_p2 );

    SC_METHOD(thread_addr1_fu_349_p2);
    sensitive << ( tmp_3_cast_reg_906 );

    SC_METHOD(thread_addr5_cast_fu_340_p1);
    sensitive << ( addr5_fu_334_p2 );

    SC_METHOD(thread_addr5_fu_334_p2);
    sensitive << ( tmp_3_cast_fu_330_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state16_io);
    sensitive << ( ap_sig_ioackin_outDataLeft_V_ap_ack );
    sensitive << ( ap_sig_ioackin_outDataRight_V_ap_ack );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_outDataLeft_V_ap_ack);
    sensitive << ( outDataLeft_V_ap_ack );
    sensitive << ( ap_reg_ioackin_outDataLeft_V_ap_ack );

    SC_METHOD(thread_ap_sig_ioackin_outDataRight_V_ap_ack);
    sensitive << ( outDataRight_V_ap_ack );
    sensitive << ( ap_reg_ioackin_outDataRight_V_ap_ack );

    SC_METHOD(thread_array_r_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_313_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( addr5_cast_fu_340_p1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_array_r_address1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_313_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_3_fu_325_p1 );
    sensitive << ( addr1_cast_fu_354_p1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_array_r_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_313_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_block_state16_io );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_array_r_ce1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_313_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_block_state16_io );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_array_r_d0);
    sensitive << ( b0_a0_V );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( a2_a0_V_read_reg_873 );
    sensitive << ( b2_a0_V_read_reg_883 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( inDataRight_V_trunc_fu_309_p1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( samples_V_load11_tru_fu_829_p1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( samples_V_load_114_t_fu_846_p1 );
    sensitive << ( samples_V_load_217_t_fu_850_p1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( samples_V_load_320_t_fu_859_p1 );

    SC_METHOD(thread_array_r_d1);
    sensitive << ( b1_a0_V );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( a1_a0_V_read_reg_878 );
    sensitive << ( inDataLeft_V_trunc_fu_305_p1 );
    sensitive << ( inDataLeft_V_trunc_reg_888 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( inDataRight_V_trunc_reg_893 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( p_Val2_trunc_fu_833_p1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( p_Val2_5_trunc_fu_854_p1 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_array_r_we0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_block_state16_io );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_array_r_we1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_block_state16_io );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_brmerge40_demorgan_i_1_fu_764_p2);
    sensitive << ( newsignbit_1_reg_1055 );
    sensitive << ( deleted_ones_1_fu_732_p3 );

    SC_METHOD(thread_brmerge40_demorgan_i_fu_541_p2);
    sensitive << ( newsignbit_reg_978 );
    sensitive << ( deleted_ones_fu_509_p3 );

    SC_METHOD(thread_brmerge_i_i1_fu_748_p2);
    sensitive << ( newsignbit_1_reg_1055 );
    sensitive << ( p_not_i_i1_fu_742_p2 );

    SC_METHOD(thread_brmerge_i_i_fu_525_p2);
    sensitive << ( newsignbit_reg_978 );
    sensitive << ( p_not_i_i_fu_519_p2 );

    SC_METHOD(thread_brmerge_i_i_i1_fu_786_p2);
    sensitive << ( underflow_1_fu_781_p2 );
    sensitive << ( overflow_1_fu_758_p2 );

    SC_METHOD(thread_brmerge_i_i_i_fu_563_p2);
    sensitive << ( underflow_fu_558_p2 );
    sensitive << ( overflow_fu_535_p2 );

    SC_METHOD(thread_carry_1_fu_636_p2);
    sensitive << ( tmp_29_fu_608_p3 );
    sensitive << ( tmp_12_fu_630_p2 );

    SC_METHOD(thread_carry_fu_442_p2);
    sensitive << ( tmp_23_fu_414_p3 );
    sensitive << ( tmp_s_fu_436_p2 );

    SC_METHOD(thread_deleted_ones_1_fu_732_p3);
    sensitive << ( carry_1_reg_1061 );
    sensitive << ( Range1_all_ones_1_reg_1073 );
    sensitive << ( p_41_i_i1_fu_727_p2 );

    SC_METHOD(thread_deleted_ones_fu_509_p3);
    sensitive << ( carry_reg_984 );
    sensitive << ( Range1_all_ones_reg_996 );
    sensitive << ( p_41_i_i_fu_504_p2 );

    SC_METHOD(thread_deleted_zeros_1_fu_716_p3);
    sensitive << ( carry_1_reg_1061 );
    sensitive << ( Range1_all_ones_1_reg_1073 );
    sensitive << ( Range1_all_zeros_1_reg_1080 );

    SC_METHOD(thread_deleted_zeros_fu_493_p3);
    sensitive << ( carry_reg_984 );
    sensitive << ( Range1_all_ones_reg_996 );
    sensitive << ( Range1_all_zeros_reg_1003 );

    SC_METHOD(thread_grp_fu_279_p0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( OP1_V_fu_359_p1 );
    sensitive << ( OP1_V_reg_936 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_279_p1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( OP2_V_fu_363_p1 );
    sensitive << ( OP2_V_1_fu_371_p1 );

    SC_METHOD(thread_i_V_fu_319_p2);
    sensitive << ( p_s_reg_268 );

    SC_METHOD(thread_inDataLeft_V_trunc_fu_305_p1);
    sensitive << ( inDataLeft_V_read_reg_868 );

    SC_METHOD(thread_inDataRight_V_trunc_fu_309_p1);
    sensitive << ( inDataRight_V_read_reg_863 );

    SC_METHOD(thread_newsignbit_1_fu_622_p3);
    sensitive << ( p_Val2_9_fu_616_p2 );

    SC_METHOD(thread_newsignbit_fu_428_p3);
    sensitive << ( p_Val2_4_fu_422_p2 );

    SC_METHOD(thread_outDataLeft_V);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( p_Val2_s_reg_255 );

    SC_METHOD(thread_outDataLeft_V_ap_vld);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_reg_ioackin_outDataLeft_V_ap_ack );

    SC_METHOD(thread_outDataLeft_V_blk_n);
    sensitive << ( outDataLeft_V_ap_ack );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_outDataRight_V);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( p_Val2_5_reg_242 );

    SC_METHOD(thread_outDataRight_V_ap_vld);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_reg_ioackin_outDataRight_V_ap_ack );

    SC_METHOD(thread_outDataRight_V_blk_n);
    sensitive << ( outDataRight_V_ap_ack );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_overflow_1_fu_758_p2);
    sensitive << ( tmp_16_fu_753_p2 );
    sensitive << ( brmerge_i_i1_fu_748_p2 );

    SC_METHOD(thread_overflow_fu_535_p2);
    sensitive << ( tmp_9_fu_530_p2 );
    sensitive << ( brmerge_i_i_fu_525_p2 );

    SC_METHOD(thread_p_38_i_i1_fu_738_p2);
    sensitive << ( carry_1_reg_1061 );
    sensitive << ( Range1_all_ones_1_reg_1073 );

    SC_METHOD(thread_p_38_i_i_fu_515_p2);
    sensitive << ( carry_reg_984 );
    sensitive << ( Range1_all_ones_reg_996 );

    SC_METHOD(thread_p_41_i_i1_fu_727_p2);
    sensitive << ( Range2_all_ones_1_reg_1068 );
    sensitive << ( tmp_15_fu_721_p2 );

    SC_METHOD(thread_p_41_i_i_fu_504_p2);
    sensitive << ( Range2_all_ones_reg_991 );
    sensitive << ( tmp_1_fu_498_p2 );

    SC_METHOD(thread_p_Val2_2_fu_387_p2);
    sensitive << ( reg_301 );
    sensitive << ( tmp_8_cast_fu_383_p1 );

    SC_METHOD(thread_p_Val2_3_fu_401_p4);
    sensitive << ( p_Val2_2_fu_387_p2 );

    SC_METHOD(thread_p_Val2_4_4_fu_695_p3);
    sensitive << ( p_Val2_4_reg_972 );
    sensitive << ( underflow_reg_1028 );

    SC_METHOD(thread_p_Val2_4_fu_422_p2);
    sensitive << ( p_Val2_3_fu_401_p4 );
    sensitive << ( tmp_5_fu_411_p1 );

    SC_METHOD(thread_p_Val2_4_mux_fu_689_p3);
    sensitive << ( p_Val2_4_reg_972 );
    sensitive << ( brmerge_i_i_i_reg_1033 );

    SC_METHOD(thread_p_Val2_5_trunc_fu_854_p1);
    sensitive << ( p_Val2_5_reg_242 );

    SC_METHOD(thread_p_Val2_7_fu_581_p2);
    sensitive << ( reg_301 );
    sensitive << ( tmp_13_cast_fu_577_p1 );

    SC_METHOD(thread_p_Val2_8_fu_595_p4);
    sensitive << ( p_Val2_7_fu_581_p2 );

    SC_METHOD(thread_p_Val2_9_5_fu_807_p3);
    sensitive << ( p_Val2_9_reg_1049 );
    sensitive << ( underflow_1_reg_1105 );

    SC_METHOD(thread_p_Val2_9_fu_616_p2);
    sensitive << ( p_Val2_8_fu_595_p4 );
    sensitive << ( tmp_11_fu_605_p1 );

    SC_METHOD(thread_p_Val2_9_mux_fu_801_p3);
    sensitive << ( p_Val2_9_reg_1049 );
    sensitive << ( brmerge_i_i_i1_reg_1110 );

    SC_METHOD(thread_p_Val2_trunc_fu_833_p1);
    sensitive << ( p_Val2_s_reg_255 );

    SC_METHOD(thread_p_not_i_i1_fu_742_p2);
    sensitive << ( deleted_zeros_1_fu_716_p3 );

    SC_METHOD(thread_p_not_i_i_fu_519_p2);
    sensitive << ( deleted_zeros_fu_493_p3 );

    SC_METHOD(thread_resultLeft_V_fu_701_p3);
    sensitive << ( underflow_not_fu_684_p2 );
    sensitive << ( p_Val2_4_mux_fu_689_p3 );
    sensitive << ( p_Val2_4_4_fu_695_p3 );

    SC_METHOD(thread_resultRight_V_fu_813_p3);
    sensitive << ( underflow_1_not_fu_796_p2 );
    sensitive << ( p_Val2_9_mux_fu_801_p3 );
    sensitive << ( p_Val2_9_5_fu_807_p3 );

    SC_METHOD(thread_samples_V_load11_tru_fu_829_p1);
    sensitive << ( tmp_4_reg_1120 );

    SC_METHOD(thread_samples_V_load_114_t_fu_846_p1);
    sensitive << ( tmp_17_reg_1125 );

    SC_METHOD(thread_samples_V_load_217_t_fu_850_p1);
    sensitive << ( tmp_18_reg_1130 );

    SC_METHOD(thread_samples_V_load_320_t_fu_859_p1);
    sensitive << ( tmp_19_reg_1135 );

    SC_METHOD(thread_tmp1_fu_680_p2);
    sensitive << ( tmp_9_reg_1018 );
    sensitive << ( brmerge40_demorgan_i_reg_1023 );

    SC_METHOD(thread_tmp2_demorgan_fu_769_p2);
    sensitive << ( p_38_i_i1_fu_738_p2 );
    sensitive << ( brmerge40_demorgan_i_1_fu_764_p2 );

    SC_METHOD(thread_tmp2_fu_775_p2);
    sensitive << ( tmp2_demorgan_fu_769_p2 );

    SC_METHOD(thread_tmp3_fu_792_p2);
    sensitive << ( tmp_16_reg_1095 );
    sensitive << ( brmerge40_demorgan_i_1_reg_1100 );

    SC_METHOD(thread_tmp_10_fu_569_p3);
    sensitive << ( p_Val2_5_reg_242 );

    SC_METHOD(thread_tmp_11_fu_605_p1);
    sensitive << ( tmp_28_reg_1008 );

    SC_METHOD(thread_tmp_12_fu_630_p2);
    sensitive << ( newsignbit_1_fu_622_p3 );

    SC_METHOD(thread_tmp_13_cast_fu_577_p1);
    sensitive << ( tmp_10_fu_569_p3 );

    SC_METHOD(thread_tmp_13_fu_642_p4);
    sensitive << ( p_Val2_7_fu_581_p2 );

    SC_METHOD(thread_tmp_14_fu_658_p4);
    sensitive << ( p_Val2_7_fu_581_p2 );

    SC_METHOD(thread_tmp_15_fu_721_p2);
    sensitive << ( tmp_31_fu_709_p3 );

    SC_METHOD(thread_tmp_16_fu_753_p2);
    sensitive << ( signbit_1_reg_1043 );

    SC_METHOD(thread_tmp_17_fu_825_p1);
    sensitive << ( array_r_q0 );

    SC_METHOD(thread_tmp_18_fu_838_p1);
    sensitive << ( array_r_q0 );

    SC_METHOD(thread_tmp_19_fu_842_p1);
    sensitive << ( array_r_q1 );

    SC_METHOD(thread_tmp_1_fu_498_p2);
    sensitive << ( tmp_25_fu_486_p3 );

    SC_METHOD(thread_tmp_20_fu_345_p1);
    sensitive << ( array_r_q0 );

    SC_METHOD(thread_tmp_23_fu_414_p3);
    sensitive << ( p_Val2_2_fu_387_p2 );

    SC_METHOD(thread_tmp_25_fu_486_p3);
    sensitive << ( p_Val2_2_reg_961 );

    SC_METHOD(thread_tmp_26_fu_367_p1);
    sensitive << ( array_r_q1 );

    SC_METHOD(thread_tmp_29_fu_608_p3);
    sensitive << ( p_Val2_7_fu_581_p2 );

    SC_METHOD(thread_tmp_2_fu_313_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_s_reg_268 );

    SC_METHOD(thread_tmp_31_fu_709_p3);
    sensitive << ( p_Val2_7_reg_1038 );

    SC_METHOD(thread_tmp_3_cast_fu_330_p1);
    sensitive << ( p_s_reg_268 );

    SC_METHOD(thread_tmp_3_fu_325_p1);
    sensitive << ( p_s_reg_268 );

    SC_METHOD(thread_tmp_4_fu_821_p1);
    sensitive << ( array_r_q1 );

    SC_METHOD(thread_tmp_5_fu_411_p1);
    sensitive << ( tmp_22_reg_951 );

    SC_METHOD(thread_tmp_6_fu_448_p4);
    sensitive << ( p_Val2_2_fu_387_p2 );

    SC_METHOD(thread_tmp_7_fu_464_p4);
    sensitive << ( p_Val2_2_fu_387_p2 );

    SC_METHOD(thread_tmp_8_cast_fu_383_p1);
    sensitive << ( tmp_8_fu_375_p3 );

    SC_METHOD(thread_tmp_8_fu_375_p3);
    sensitive << ( p_Val2_s_reg_255 );

    SC_METHOD(thread_tmp_9_fu_530_p2);
    sensitive << ( signbit_reg_966 );

    SC_METHOD(thread_tmp_demorgan_fu_546_p2);
    sensitive << ( p_38_i_i_fu_515_p2 );
    sensitive << ( brmerge40_demorgan_i_fu_541_p2 );

    SC_METHOD(thread_tmp_fu_552_p2);
    sensitive << ( tmp_demorgan_fu_546_p2 );

    SC_METHOD(thread_tmp_s_fu_436_p2);
    sensitive << ( newsignbit_fu_428_p3 );

    SC_METHOD(thread_underflow_1_fu_781_p2);
    sensitive << ( signbit_1_reg_1043 );
    sensitive << ( tmp2_fu_775_p2 );

    SC_METHOD(thread_underflow_1_not_fu_796_p2);
    sensitive << ( p_38_i_i1_reg_1090 );
    sensitive << ( tmp3_fu_792_p2 );

    SC_METHOD(thread_underflow_fu_558_p2);
    sensitive << ( signbit_reg_966 );
    sensitive << ( tmp_fu_552_p2 );

    SC_METHOD(thread_underflow_not_fu_684_p2);
    sensitive << ( p_38_i_i_reg_1013 );
    sensitive << ( tmp1_fu_680_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_313_p2 );
    sensitive << ( ap_block_state16_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000001";
    ap_reg_ioackin_outDataLeft_V_ap_ack = SC_LOGIC_0;
    ap_reg_ioackin_outDataRight_V_ap_ack = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "biquadv2start_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, outDataLeft_V, "(port)outDataLeft_V");
    sc_trace(mVcdFile, outDataLeft_V_ap_vld, "(port)outDataLeft_V_ap_vld");
    sc_trace(mVcdFile, outDataLeft_V_ap_ack, "(port)outDataLeft_V_ap_ack");
    sc_trace(mVcdFile, outDataRight_V, "(port)outDataRight_V");
    sc_trace(mVcdFile, outDataRight_V_ap_vld, "(port)outDataRight_V_ap_vld");
    sc_trace(mVcdFile, outDataRight_V_ap_ack, "(port)outDataRight_V_ap_ack");
    sc_trace(mVcdFile, s_axi_biquadv2_AWVALID, "(port)s_axi_biquadv2_AWVALID");
    sc_trace(mVcdFile, s_axi_biquadv2_AWREADY, "(port)s_axi_biquadv2_AWREADY");
    sc_trace(mVcdFile, s_axi_biquadv2_AWADDR, "(port)s_axi_biquadv2_AWADDR");
    sc_trace(mVcdFile, s_axi_biquadv2_WVALID, "(port)s_axi_biquadv2_WVALID");
    sc_trace(mVcdFile, s_axi_biquadv2_WREADY, "(port)s_axi_biquadv2_WREADY");
    sc_trace(mVcdFile, s_axi_biquadv2_WDATA, "(port)s_axi_biquadv2_WDATA");
    sc_trace(mVcdFile, s_axi_biquadv2_WSTRB, "(port)s_axi_biquadv2_WSTRB");
    sc_trace(mVcdFile, s_axi_biquadv2_ARVALID, "(port)s_axi_biquadv2_ARVALID");
    sc_trace(mVcdFile, s_axi_biquadv2_ARREADY, "(port)s_axi_biquadv2_ARREADY");
    sc_trace(mVcdFile, s_axi_biquadv2_ARADDR, "(port)s_axi_biquadv2_ARADDR");
    sc_trace(mVcdFile, s_axi_biquadv2_RVALID, "(port)s_axi_biquadv2_RVALID");
    sc_trace(mVcdFile, s_axi_biquadv2_RREADY, "(port)s_axi_biquadv2_RREADY");
    sc_trace(mVcdFile, s_axi_biquadv2_RDATA, "(port)s_axi_biquadv2_RDATA");
    sc_trace(mVcdFile, s_axi_biquadv2_RRESP, "(port)s_axi_biquadv2_RRESP");
    sc_trace(mVcdFile, s_axi_biquadv2_BVALID, "(port)s_axi_biquadv2_BVALID");
    sc_trace(mVcdFile, s_axi_biquadv2_BREADY, "(port)s_axi_biquadv2_BREADY");
    sc_trace(mVcdFile, s_axi_biquadv2_BRESP, "(port)s_axi_biquadv2_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, b0_a0_V, "b0_a0_V");
    sc_trace(mVcdFile, b1_a0_V, "b1_a0_V");
    sc_trace(mVcdFile, b2_a0_V, "b2_a0_V");
    sc_trace(mVcdFile, a1_a0_V, "a1_a0_V");
    sc_trace(mVcdFile, a2_a0_V, "a2_a0_V");
    sc_trace(mVcdFile, inDataLeft_V, "inDataLeft_V");
    sc_trace(mVcdFile, inDataRight_V, "inDataRight_V");
    sc_trace(mVcdFile, array_r_address0, "array_r_address0");
    sc_trace(mVcdFile, array_r_ce0, "array_r_ce0");
    sc_trace(mVcdFile, array_r_we0, "array_r_we0");
    sc_trace(mVcdFile, array_r_d0, "array_r_d0");
    sc_trace(mVcdFile, array_r_q0, "array_r_q0");
    sc_trace(mVcdFile, array_r_address1, "array_r_address1");
    sc_trace(mVcdFile, array_r_ce1, "array_r_ce1");
    sc_trace(mVcdFile, array_r_we1, "array_r_we1");
    sc_trace(mVcdFile, array_r_d1, "array_r_d1");
    sc_trace(mVcdFile, array_r_q1, "array_r_q1");
    sc_trace(mVcdFile, outDataLeft_V_blk_n, "outDataLeft_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, outDataRight_V_blk_n, "outDataRight_V_blk_n");
    sc_trace(mVcdFile, grp_fu_279_p2, "grp_fu_279_p2");
    sc_trace(mVcdFile, reg_301, "reg_301");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, inDataRight_V_read_reg_863, "inDataRight_V_read_reg_863");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, inDataLeft_V_read_reg_868, "inDataLeft_V_read_reg_868");
    sc_trace(mVcdFile, a2_a0_V_read_reg_873, "a2_a0_V_read_reg_873");
    sc_trace(mVcdFile, a1_a0_V_read_reg_878, "a1_a0_V_read_reg_878");
    sc_trace(mVcdFile, b2_a0_V_read_reg_883, "b2_a0_V_read_reg_883");
    sc_trace(mVcdFile, inDataLeft_V_trunc_fu_305_p1, "inDataLeft_V_trunc_fu_305_p1");
    sc_trace(mVcdFile, inDataLeft_V_trunc_reg_888, "inDataLeft_V_trunc_reg_888");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, inDataRight_V_trunc_fu_309_p1, "inDataRight_V_trunc_fu_309_p1");
    sc_trace(mVcdFile, inDataRight_V_trunc_reg_893, "inDataRight_V_trunc_reg_893");
    sc_trace(mVcdFile, i_V_fu_319_p2, "i_V_fu_319_p2");
    sc_trace(mVcdFile, i_V_reg_901, "i_V_reg_901");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_3_cast_fu_330_p1, "tmp_3_cast_fu_330_p1");
    sc_trace(mVcdFile, tmp_3_cast_reg_906, "tmp_3_cast_reg_906");
    sc_trace(mVcdFile, tmp_2_fu_313_p2, "tmp_2_fu_313_p2");
    sc_trace(mVcdFile, array_load_4_reg_921, "array_load_4_reg_921");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_20_fu_345_p1, "tmp_20_fu_345_p1");
    sc_trace(mVcdFile, tmp_20_reg_926, "tmp_20_reg_926");
    sc_trace(mVcdFile, OP1_V_fu_359_p1, "OP1_V_fu_359_p1");
    sc_trace(mVcdFile, OP1_V_reg_936, "OP1_V_reg_936");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, OP2_V_fu_363_p1, "OP2_V_fu_363_p1");
    sc_trace(mVcdFile, tmp_26_fu_367_p1, "tmp_26_fu_367_p1");
    sc_trace(mVcdFile, tmp_26_reg_946, "tmp_26_reg_946");
    sc_trace(mVcdFile, tmp_22_reg_951, "tmp_22_reg_951");
    sc_trace(mVcdFile, OP2_V_1_fu_371_p1, "OP2_V_1_fu_371_p1");
    sc_trace(mVcdFile, p_Val2_2_fu_387_p2, "p_Val2_2_fu_387_p2");
    sc_trace(mVcdFile, p_Val2_2_reg_961, "p_Val2_2_reg_961");
    sc_trace(mVcdFile, signbit_reg_966, "signbit_reg_966");
    sc_trace(mVcdFile, p_Val2_4_fu_422_p2, "p_Val2_4_fu_422_p2");
    sc_trace(mVcdFile, p_Val2_4_reg_972, "p_Val2_4_reg_972");
    sc_trace(mVcdFile, newsignbit_fu_428_p3, "newsignbit_fu_428_p3");
    sc_trace(mVcdFile, newsignbit_reg_978, "newsignbit_reg_978");
    sc_trace(mVcdFile, carry_fu_442_p2, "carry_fu_442_p2");
    sc_trace(mVcdFile, carry_reg_984, "carry_reg_984");
    sc_trace(mVcdFile, Range2_all_ones_fu_458_p2, "Range2_all_ones_fu_458_p2");
    sc_trace(mVcdFile, Range2_all_ones_reg_991, "Range2_all_ones_reg_991");
    sc_trace(mVcdFile, Range1_all_ones_fu_474_p2, "Range1_all_ones_fu_474_p2");
    sc_trace(mVcdFile, Range1_all_ones_reg_996, "Range1_all_ones_reg_996");
    sc_trace(mVcdFile, Range1_all_zeros_fu_480_p2, "Range1_all_zeros_fu_480_p2");
    sc_trace(mVcdFile, Range1_all_zeros_reg_1003, "Range1_all_zeros_reg_1003");
    sc_trace(mVcdFile, tmp_28_reg_1008, "tmp_28_reg_1008");
    sc_trace(mVcdFile, p_38_i_i_fu_515_p2, "p_38_i_i_fu_515_p2");
    sc_trace(mVcdFile, p_38_i_i_reg_1013, "p_38_i_i_reg_1013");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_9_fu_530_p2, "tmp_9_fu_530_p2");
    sc_trace(mVcdFile, tmp_9_reg_1018, "tmp_9_reg_1018");
    sc_trace(mVcdFile, brmerge40_demorgan_i_fu_541_p2, "brmerge40_demorgan_i_fu_541_p2");
    sc_trace(mVcdFile, brmerge40_demorgan_i_reg_1023, "brmerge40_demorgan_i_reg_1023");
    sc_trace(mVcdFile, underflow_fu_558_p2, "underflow_fu_558_p2");
    sc_trace(mVcdFile, underflow_reg_1028, "underflow_reg_1028");
    sc_trace(mVcdFile, brmerge_i_i_i_fu_563_p2, "brmerge_i_i_i_fu_563_p2");
    sc_trace(mVcdFile, brmerge_i_i_i_reg_1033, "brmerge_i_i_i_reg_1033");
    sc_trace(mVcdFile, p_Val2_7_fu_581_p2, "p_Val2_7_fu_581_p2");
    sc_trace(mVcdFile, p_Val2_7_reg_1038, "p_Val2_7_reg_1038");
    sc_trace(mVcdFile, signbit_1_reg_1043, "signbit_1_reg_1043");
    sc_trace(mVcdFile, p_Val2_9_fu_616_p2, "p_Val2_9_fu_616_p2");
    sc_trace(mVcdFile, p_Val2_9_reg_1049, "p_Val2_9_reg_1049");
    sc_trace(mVcdFile, newsignbit_1_fu_622_p3, "newsignbit_1_fu_622_p3");
    sc_trace(mVcdFile, newsignbit_1_reg_1055, "newsignbit_1_reg_1055");
    sc_trace(mVcdFile, carry_1_fu_636_p2, "carry_1_fu_636_p2");
    sc_trace(mVcdFile, carry_1_reg_1061, "carry_1_reg_1061");
    sc_trace(mVcdFile, Range2_all_ones_1_fu_652_p2, "Range2_all_ones_1_fu_652_p2");
    sc_trace(mVcdFile, Range2_all_ones_1_reg_1068, "Range2_all_ones_1_reg_1068");
    sc_trace(mVcdFile, Range1_all_ones_1_fu_668_p2, "Range1_all_ones_1_fu_668_p2");
    sc_trace(mVcdFile, Range1_all_ones_1_reg_1073, "Range1_all_ones_1_reg_1073");
    sc_trace(mVcdFile, Range1_all_zeros_1_fu_674_p2, "Range1_all_zeros_1_fu_674_p2");
    sc_trace(mVcdFile, Range1_all_zeros_1_reg_1080, "Range1_all_zeros_1_reg_1080");
    sc_trace(mVcdFile, resultLeft_V_fu_701_p3, "resultLeft_V_fu_701_p3");
    sc_trace(mVcdFile, resultLeft_V_reg_1085, "resultLeft_V_reg_1085");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, p_38_i_i1_fu_738_p2, "p_38_i_i1_fu_738_p2");
    sc_trace(mVcdFile, p_38_i_i1_reg_1090, "p_38_i_i1_reg_1090");
    sc_trace(mVcdFile, tmp_16_fu_753_p2, "tmp_16_fu_753_p2");
    sc_trace(mVcdFile, tmp_16_reg_1095, "tmp_16_reg_1095");
    sc_trace(mVcdFile, brmerge40_demorgan_i_1_fu_764_p2, "brmerge40_demorgan_i_1_fu_764_p2");
    sc_trace(mVcdFile, brmerge40_demorgan_i_1_reg_1100, "brmerge40_demorgan_i_1_reg_1100");
    sc_trace(mVcdFile, underflow_1_fu_781_p2, "underflow_1_fu_781_p2");
    sc_trace(mVcdFile, underflow_1_reg_1105, "underflow_1_reg_1105");
    sc_trace(mVcdFile, brmerge_i_i_i1_fu_786_p2, "brmerge_i_i_i1_fu_786_p2");
    sc_trace(mVcdFile, brmerge_i_i_i1_reg_1110, "brmerge_i_i_i1_reg_1110");
    sc_trace(mVcdFile, resultRight_V_fu_813_p3, "resultRight_V_fu_813_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_4_fu_821_p1, "tmp_4_fu_821_p1");
    sc_trace(mVcdFile, tmp_4_reg_1120, "tmp_4_reg_1120");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_17_fu_825_p1, "tmp_17_fu_825_p1");
    sc_trace(mVcdFile, tmp_17_reg_1125, "tmp_17_reg_1125");
    sc_trace(mVcdFile, tmp_18_fu_838_p1, "tmp_18_fu_838_p1");
    sc_trace(mVcdFile, tmp_18_reg_1130, "tmp_18_reg_1130");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_19_fu_842_p1, "tmp_19_fu_842_p1");
    sc_trace(mVcdFile, tmp_19_reg_1135, "tmp_19_reg_1135");
    sc_trace(mVcdFile, p_Val2_5_reg_242, "p_Val2_5_reg_242");
    sc_trace(mVcdFile, p_Val2_s_reg_255, "p_Val2_s_reg_255");
    sc_trace(mVcdFile, p_s_reg_268, "p_s_reg_268");
    sc_trace(mVcdFile, tmp_3_fu_325_p1, "tmp_3_fu_325_p1");
    sc_trace(mVcdFile, addr5_cast_fu_340_p1, "addr5_cast_fu_340_p1");
    sc_trace(mVcdFile, addr1_cast_fu_354_p1, "addr1_cast_fu_354_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_outDataLeft_V_ap_ack, "ap_reg_ioackin_outDataLeft_V_ap_ack");
    sc_trace(mVcdFile, ap_sig_ioackin_outDataLeft_V_ap_ack, "ap_sig_ioackin_outDataLeft_V_ap_ack");
    sc_trace(mVcdFile, ap_sig_ioackin_outDataRight_V_ap_ack, "ap_sig_ioackin_outDataRight_V_ap_ack");
    sc_trace(mVcdFile, ap_block_state16_io, "ap_block_state16_io");
    sc_trace(mVcdFile, ap_reg_ioackin_outDataRight_V_ap_ack, "ap_reg_ioackin_outDataRight_V_ap_ack");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, samples_V_load11_tru_fu_829_p1, "samples_V_load11_tru_fu_829_p1");
    sc_trace(mVcdFile, p_Val2_trunc_fu_833_p1, "p_Val2_trunc_fu_833_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, samples_V_load_114_t_fu_846_p1, "samples_V_load_114_t_fu_846_p1");
    sc_trace(mVcdFile, samples_V_load_217_t_fu_850_p1, "samples_V_load_217_t_fu_850_p1");
    sc_trace(mVcdFile, p_Val2_5_trunc_fu_854_p1, "p_Val2_5_trunc_fu_854_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, samples_V_load_320_t_fu_859_p1, "samples_V_load_320_t_fu_859_p1");
    sc_trace(mVcdFile, grp_fu_279_p0, "grp_fu_279_p0");
    sc_trace(mVcdFile, grp_fu_279_p1, "grp_fu_279_p1");
    sc_trace(mVcdFile, addr5_fu_334_p2, "addr5_fu_334_p2");
    sc_trace(mVcdFile, addr1_fu_349_p2, "addr1_fu_349_p2");
    sc_trace(mVcdFile, tmp_8_fu_375_p3, "tmp_8_fu_375_p3");
    sc_trace(mVcdFile, tmp_8_cast_fu_383_p1, "tmp_8_cast_fu_383_p1");
    sc_trace(mVcdFile, p_Val2_3_fu_401_p4, "p_Val2_3_fu_401_p4");
    sc_trace(mVcdFile, tmp_5_fu_411_p1, "tmp_5_fu_411_p1");
    sc_trace(mVcdFile, tmp_23_fu_414_p3, "tmp_23_fu_414_p3");
    sc_trace(mVcdFile, tmp_s_fu_436_p2, "tmp_s_fu_436_p2");
    sc_trace(mVcdFile, tmp_6_fu_448_p4, "tmp_6_fu_448_p4");
    sc_trace(mVcdFile, tmp_7_fu_464_p4, "tmp_7_fu_464_p4");
    sc_trace(mVcdFile, tmp_25_fu_486_p3, "tmp_25_fu_486_p3");
    sc_trace(mVcdFile, tmp_1_fu_498_p2, "tmp_1_fu_498_p2");
    sc_trace(mVcdFile, p_41_i_i_fu_504_p2, "p_41_i_i_fu_504_p2");
    sc_trace(mVcdFile, deleted_zeros_fu_493_p3, "deleted_zeros_fu_493_p3");
    sc_trace(mVcdFile, p_not_i_i_fu_519_p2, "p_not_i_i_fu_519_p2");
    sc_trace(mVcdFile, brmerge_i_i_fu_525_p2, "brmerge_i_i_fu_525_p2");
    sc_trace(mVcdFile, deleted_ones_fu_509_p3, "deleted_ones_fu_509_p3");
    sc_trace(mVcdFile, tmp_demorgan_fu_546_p2, "tmp_demorgan_fu_546_p2");
    sc_trace(mVcdFile, tmp_fu_552_p2, "tmp_fu_552_p2");
    sc_trace(mVcdFile, overflow_fu_535_p2, "overflow_fu_535_p2");
    sc_trace(mVcdFile, tmp_10_fu_569_p3, "tmp_10_fu_569_p3");
    sc_trace(mVcdFile, tmp_13_cast_fu_577_p1, "tmp_13_cast_fu_577_p1");
    sc_trace(mVcdFile, p_Val2_8_fu_595_p4, "p_Val2_8_fu_595_p4");
    sc_trace(mVcdFile, tmp_11_fu_605_p1, "tmp_11_fu_605_p1");
    sc_trace(mVcdFile, tmp_29_fu_608_p3, "tmp_29_fu_608_p3");
    sc_trace(mVcdFile, tmp_12_fu_630_p2, "tmp_12_fu_630_p2");
    sc_trace(mVcdFile, tmp_13_fu_642_p4, "tmp_13_fu_642_p4");
    sc_trace(mVcdFile, tmp_14_fu_658_p4, "tmp_14_fu_658_p4");
    sc_trace(mVcdFile, tmp1_fu_680_p2, "tmp1_fu_680_p2");
    sc_trace(mVcdFile, underflow_not_fu_684_p2, "underflow_not_fu_684_p2");
    sc_trace(mVcdFile, p_Val2_4_mux_fu_689_p3, "p_Val2_4_mux_fu_689_p3");
    sc_trace(mVcdFile, p_Val2_4_4_fu_695_p3, "p_Val2_4_4_fu_695_p3");
    sc_trace(mVcdFile, tmp_31_fu_709_p3, "tmp_31_fu_709_p3");
    sc_trace(mVcdFile, tmp_15_fu_721_p2, "tmp_15_fu_721_p2");
    sc_trace(mVcdFile, p_41_i_i1_fu_727_p2, "p_41_i_i1_fu_727_p2");
    sc_trace(mVcdFile, deleted_zeros_1_fu_716_p3, "deleted_zeros_1_fu_716_p3");
    sc_trace(mVcdFile, p_not_i_i1_fu_742_p2, "p_not_i_i1_fu_742_p2");
    sc_trace(mVcdFile, brmerge_i_i1_fu_748_p2, "brmerge_i_i1_fu_748_p2");
    sc_trace(mVcdFile, deleted_ones_1_fu_732_p3, "deleted_ones_1_fu_732_p3");
    sc_trace(mVcdFile, tmp2_demorgan_fu_769_p2, "tmp2_demorgan_fu_769_p2");
    sc_trace(mVcdFile, tmp2_fu_775_p2, "tmp2_fu_775_p2");
    sc_trace(mVcdFile, overflow_1_fu_758_p2, "overflow_1_fu_758_p2");
    sc_trace(mVcdFile, tmp3_fu_792_p2, "tmp3_fu_792_p2");
    sc_trace(mVcdFile, underflow_1_not_fu_796_p2, "underflow_1_not_fu_796_p2");
    sc_trace(mVcdFile, p_Val2_9_mux_fu_801_p3, "p_Val2_9_mux_fu_801_p3");
    sc_trace(mVcdFile, p_Val2_9_5_fu_807_p3, "p_Val2_9_5_fu_807_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("biquadv2start.hdltvin.dat");
    mHdltvoutHandle.open("biquadv2start.hdltvout.dat");
}

biquadv2start::~biquadv2start() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete array_r_U;
    delete biquadv2start_biquadv2_s_axi_U;
    delete biquadv2start_mulcud_U0;
}

void biquadv2start::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void biquadv2start::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_outDataLeft_V_ap_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
            if (esl_seteq<1,1,1>(ap_block_state16_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_outDataLeft_V_ap_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, outDataLeft_V_ap_ack.read())) {
                ap_reg_ioackin_outDataLeft_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_outDataRight_V_ap_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
            if (esl_seteq<1,1,1>(ap_block_state16_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_outDataRight_V_ap_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, outDataRight_V_ap_ack.read())) {
                ap_reg_ioackin_outDataRight_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        p_Val2_5_reg_242 = resultRight_V_fu_813_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_Val2_5_reg_242 = ap_const_lv24_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        p_Val2_s_reg_255 = resultLeft_V_reg_1085.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_Val2_s_reg_255 = ap_const_lv24_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        p_s_reg_268 = i_V_reg_901.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_s_reg_268 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        OP1_V_reg_936 = OP1_V_fu_359_p1.read();
        tmp_26_reg_946 = tmp_26_fu_367_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        Range1_all_ones_1_reg_1073 = Range1_all_ones_1_fu_668_p2.read();
        Range1_all_zeros_1_reg_1080 = Range1_all_zeros_1_fu_674_p2.read();
        Range2_all_ones_1_reg_1068 = Range2_all_ones_1_fu_652_p2.read();
        brmerge40_demorgan_i_reg_1023 = brmerge40_demorgan_i_fu_541_p2.read();
        brmerge_i_i_i_reg_1033 = brmerge_i_i_i_fu_563_p2.read();
        carry_1_reg_1061 = carry_1_fu_636_p2.read();
        newsignbit_1_reg_1055 = p_Val2_9_fu_616_p2.read().range(23, 23);
        p_38_i_i_reg_1013 = p_38_i_i_fu_515_p2.read();
        p_Val2_7_reg_1038 = p_Val2_7_fu_581_p2.read();
        p_Val2_9_reg_1049 = p_Val2_9_fu_616_p2.read();
        signbit_1_reg_1043 = p_Val2_7_fu_581_p2.read().range(50, 50);
        tmp_9_reg_1018 = tmp_9_fu_530_p2.read();
        underflow_reg_1028 = underflow_fu_558_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        Range1_all_ones_reg_996 = Range1_all_ones_fu_474_p2.read();
        Range1_all_zeros_reg_1003 = Range1_all_zeros_fu_480_p2.read();
        Range2_all_ones_reg_991 = Range2_all_ones_fu_458_p2.read();
        carry_reg_984 = carry_fu_442_p2.read();
        newsignbit_reg_978 = p_Val2_4_fu_422_p2.read().range(23, 23);
        p_Val2_2_reg_961 = p_Val2_2_fu_387_p2.read();
        p_Val2_4_reg_972 = p_Val2_4_fu_422_p2.read();
        signbit_reg_966 = p_Val2_2_fu_387_p2.read().range(50, 50);
        tmp_28_reg_1008 = grp_fu_279_p2.read().range(23, 23);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        a1_a0_V_read_reg_878 = a1_a0_V.read();
        a2_a0_V_read_reg_873 = a2_a0_V.read();
        b2_a0_V_read_reg_883 = b2_a0_V.read();
        inDataLeft_V_read_reg_868 = inDataLeft_V.read();
        inDataRight_V_read_reg_863 = inDataRight_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        array_load_4_reg_921 = array_r_q1.read();
        tmp_20_reg_926 = tmp_20_fu_345_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        brmerge40_demorgan_i_1_reg_1100 = brmerge40_demorgan_i_1_fu_764_p2.read();
        brmerge_i_i_i1_reg_1110 = brmerge_i_i_i1_fu_786_p2.read();
        p_38_i_i1_reg_1090 = p_38_i_i1_fu_738_p2.read();
        resultLeft_V_reg_1085 = resultLeft_V_fu_701_p3.read();
        tmp_16_reg_1095 = tmp_16_fu_753_p2.read();
        underflow_1_reg_1105 = underflow_1_fu_781_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_V_reg_901 = i_V_fu_319_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        inDataLeft_V_trunc_reg_888 = inDataLeft_V_trunc_fu_305_p1.read();
        inDataRight_V_trunc_reg_893 = inDataRight_V_trunc_fu_309_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        reg_301 = grp_fu_279_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        tmp_17_reg_1125 = tmp_17_fu_825_p1.read();
        tmp_4_reg_1120 = tmp_4_fu_821_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tmp_18_reg_1130 = tmp_18_fu_838_p1.read();
        tmp_19_reg_1135 = tmp_19_fu_842_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_22_reg_951 = grp_fu_279_p2.read().range(23, 23);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_2_fu_313_p2.read(), ap_const_lv1_0))) {
        tmp_3_cast_reg_906 = tmp_3_cast_fu_330_p1.read();
    }
}

void biquadv2start::thread_OP1_V_fu_359_p1() {
    OP1_V_fu_359_p1 = esl_sext<51,27>(array_load_4_reg_921.read());
}

void biquadv2start::thread_OP2_V_1_fu_371_p1() {
    OP2_V_1_fu_371_p1 = esl_sext<51,24>(tmp_26_reg_946.read());
}

void biquadv2start::thread_OP2_V_fu_363_p1() {
    OP2_V_fu_363_p1 = esl_sext<51,24>(tmp_20_reg_926.read());
}

void biquadv2start::thread_Range1_all_ones_1_fu_668_p2() {
    Range1_all_ones_1_fu_668_p2 = (!tmp_14_fu_658_p4.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(tmp_14_fu_658_p4.read() == ap_const_lv3_7);
}

void biquadv2start::thread_Range1_all_ones_fu_474_p2() {
    Range1_all_ones_fu_474_p2 = (!tmp_7_fu_464_p4.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_464_p4.read() == ap_const_lv3_7);
}

void biquadv2start::thread_Range1_all_zeros_1_fu_674_p2() {
    Range1_all_zeros_1_fu_674_p2 = (!tmp_14_fu_658_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_14_fu_658_p4.read() == ap_const_lv3_0);
}

void biquadv2start::thread_Range1_all_zeros_fu_480_p2() {
    Range1_all_zeros_fu_480_p2 = (!tmp_7_fu_464_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_464_p4.read() == ap_const_lv3_0);
}

void biquadv2start::thread_Range2_all_ones_1_fu_652_p2() {
    Range2_all_ones_1_fu_652_p2 = (!tmp_13_fu_642_p4.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_fu_642_p4.read() == ap_const_lv2_3);
}

void biquadv2start::thread_Range2_all_ones_fu_458_p2() {
    Range2_all_ones_fu_458_p2 = (!tmp_6_fu_448_p4.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_448_p4.read() == ap_const_lv2_3);
}

void biquadv2start::thread_addr1_cast_fu_354_p1() {
    addr1_cast_fu_354_p1 = esl_zext<32,4>(addr1_fu_349_p2.read());
}

void biquadv2start::thread_addr1_fu_349_p2() {
    addr1_fu_349_p2 = (!ap_const_lv4_A.is_01() || !tmp_3_cast_reg_906.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_A) + sc_biguint<4>(tmp_3_cast_reg_906.read()));
}

void biquadv2start::thread_addr5_cast_fu_340_p1() {
    addr5_cast_fu_340_p1 = esl_zext<32,4>(addr5_fu_334_p2.read());
}

void biquadv2start::thread_addr5_fu_334_p2() {
    addr5_fu_334_p2 = (!ap_const_lv4_5.is_01() || !tmp_3_cast_fu_330_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_5) + sc_biguint<4>(tmp_3_cast_fu_330_p1.read()));
}

void biquadv2start::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void biquadv2start::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void biquadv2start::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void biquadv2start::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void biquadv2start::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void biquadv2start::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void biquadv2start::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void biquadv2start::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void biquadv2start::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void biquadv2start::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void biquadv2start::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void biquadv2start::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void biquadv2start::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void biquadv2start::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void biquadv2start::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void biquadv2start::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void biquadv2start::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void biquadv2start::thread_ap_block_state16_io() {
    ap_block_state16_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outDataLeft_V_ap_ack.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_outDataRight_V_ap_ack.read()));
}

void biquadv2start::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void biquadv2start::thread_ap_sig_ioackin_outDataLeft_V_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outDataLeft_V_ap_ack.read())) {
        ap_sig_ioackin_outDataLeft_V_ap_ack = outDataLeft_V_ap_ack.read();
    } else {
        ap_sig_ioackin_outDataLeft_V_ap_ack = ap_const_logic_1;
    }
}

void biquadv2start::thread_ap_sig_ioackin_outDataRight_V_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outDataRight_V_ap_ack.read())) {
        ap_sig_ioackin_outDataRight_V_ap_ack = outDataRight_V_ap_ack.read();
    } else {
        ap_sig_ioackin_outDataRight_V_ap_ack = ap_const_logic_1;
    }
}

void biquadv2start::thread_array_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        array_r_address0 = ap_const_lv4_C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        array_r_address0 = ap_const_lv4_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        array_r_address0 = ap_const_lv4_7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        array_r_address0 = ap_const_lv4_9;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        array_r_address0 = ap_const_lv4_D;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(tmp_2_fu_313_p2.read(), ap_const_lv1_1))) {
        array_r_address0 = ap_const_lv4_6;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(tmp_2_fu_313_p2.read(), ap_const_lv1_0))) {
        array_r_address0 =  (sc_lv<4>) (addr5_cast_fu_340_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        array_r_address0 = ap_const_lv4_A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        array_r_address0 = ap_const_lv4_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        array_r_address0 = ap_const_lv4_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        array_r_address0 = ap_const_lv4_0;
    } else {
        array_r_address0 = "XXXX";
    }
}

void biquadv2start::thread_array_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        array_r_address1 = ap_const_lv4_D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        array_r_address1 = ap_const_lv4_6;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        array_r_address1 = ap_const_lv4_B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        array_r_address1 =  (sc_lv<4>) (addr1_cast_fu_354_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                 esl_seteq<1,1,1>(tmp_2_fu_313_p2.read(), ap_const_lv1_1)))) {
        array_r_address1 = ap_const_lv4_8;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(tmp_2_fu_313_p2.read(), ap_const_lv1_0))) {
        array_r_address1 =  (sc_lv<4>) (tmp_3_fu_325_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        array_r_address1 = ap_const_lv4_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        array_r_address1 = ap_const_lv4_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        array_r_address1 = ap_const_lv4_1;
    } else {
        array_r_address1 = "XXXX";
    }
}

void biquadv2start::thread_array_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(tmp_2_fu_313_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_block_state16_io.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(tmp_2_fu_313_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        array_r_ce0 = ap_const_logic_1;
    } else {
        array_r_ce0 = ap_const_logic_0;
    }
}

void biquadv2start::thread_array_r_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(tmp_2_fu_313_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_block_state16_io.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(tmp_2_fu_313_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        array_r_ce1 = ap_const_logic_1;
    } else {
        array_r_ce1 = ap_const_logic_0;
    }
}

void biquadv2start::thread_array_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        array_r_d0 = samples_V_load_320_t_fu_859_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        array_r_d0 = samples_V_load_217_t_fu_850_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        array_r_d0 = samples_V_load_114_t_fu_846_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        array_r_d0 = samples_V_load11_tru_fu_829_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        array_r_d0 = inDataRight_V_trunc_fu_309_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        array_r_d0 = a2_a0_V_read_reg_873.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        array_r_d0 = b2_a0_V_read_reg_883.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        array_r_d0 = b0_a0_V.read();
    } else {
        array_r_d0 =  (sc_lv<27>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void biquadv2start::thread_array_r_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        array_r_d1 = inDataRight_V_trunc_reg_893.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        array_r_d1 = p_Val2_5_trunc_fu_854_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        array_r_d1 = inDataLeft_V_trunc_reg_888.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        array_r_d1 = p_Val2_trunc_fu_833_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        array_r_d1 = inDataLeft_V_trunc_fu_305_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        array_r_d1 = a1_a0_V_read_reg_878.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        array_r_d1 = b1_a0_V.read();
    } else {
        array_r_d1 =  (sc_lv<27>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void biquadv2start::thread_array_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_block_state16_io.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        array_r_we0 = ap_const_logic_1;
    } else {
        array_r_we0 = ap_const_logic_0;
    }
}

void biquadv2start::thread_array_r_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_block_state16_io.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        array_r_we1 = ap_const_logic_1;
    } else {
        array_r_we1 = ap_const_logic_0;
    }
}

void biquadv2start::thread_brmerge40_demorgan_i_1_fu_764_p2() {
    brmerge40_demorgan_i_1_fu_764_p2 = (newsignbit_1_reg_1055.read() & deleted_ones_1_fu_732_p3.read());
}

void biquadv2start::thread_brmerge40_demorgan_i_fu_541_p2() {
    brmerge40_demorgan_i_fu_541_p2 = (newsignbit_reg_978.read() & deleted_ones_fu_509_p3.read());
}

void biquadv2start::thread_brmerge_i_i1_fu_748_p2() {
    brmerge_i_i1_fu_748_p2 = (newsignbit_1_reg_1055.read() | p_not_i_i1_fu_742_p2.read());
}

void biquadv2start::thread_brmerge_i_i_fu_525_p2() {
    brmerge_i_i_fu_525_p2 = (newsignbit_reg_978.read() | p_not_i_i_fu_519_p2.read());
}

void biquadv2start::thread_brmerge_i_i_i1_fu_786_p2() {
    brmerge_i_i_i1_fu_786_p2 = (underflow_1_fu_781_p2.read() | overflow_1_fu_758_p2.read());
}

void biquadv2start::thread_brmerge_i_i_i_fu_563_p2() {
    brmerge_i_i_i_fu_563_p2 = (underflow_fu_558_p2.read() | overflow_fu_535_p2.read());
}

void biquadv2start::thread_carry_1_fu_636_p2() {
    carry_1_fu_636_p2 = (tmp_29_fu_608_p3.read() & tmp_12_fu_630_p2.read());
}

void biquadv2start::thread_carry_fu_442_p2() {
    carry_fu_442_p2 = (tmp_23_fu_414_p3.read() & tmp_s_fu_436_p2.read());
}

void biquadv2start::thread_deleted_ones_1_fu_732_p3() {
    deleted_ones_1_fu_732_p3 = (!carry_1_reg_1061.read()[0].is_01())? sc_lv<1>(): ((carry_1_reg_1061.read()[0].to_bool())? p_41_i_i1_fu_727_p2.read(): Range1_all_ones_1_reg_1073.read());
}

void biquadv2start::thread_deleted_ones_fu_509_p3() {
    deleted_ones_fu_509_p3 = (!carry_reg_984.read()[0].is_01())? sc_lv<1>(): ((carry_reg_984.read()[0].to_bool())? p_41_i_i_fu_504_p2.read(): Range1_all_ones_reg_996.read());
}

void biquadv2start::thread_deleted_zeros_1_fu_716_p3() {
    deleted_zeros_1_fu_716_p3 = (!carry_1_reg_1061.read()[0].is_01())? sc_lv<1>(): ((carry_1_reg_1061.read()[0].to_bool())? Range1_all_ones_1_reg_1073.read(): Range1_all_zeros_1_reg_1080.read());
}

void biquadv2start::thread_deleted_zeros_fu_493_p3() {
    deleted_zeros_fu_493_p3 = (!carry_reg_984.read()[0].is_01())? sc_lv<1>(): ((carry_reg_984.read()[0].to_bool())? Range1_all_ones_reg_996.read(): Range1_all_zeros_reg_1003.read());
}

void biquadv2start::thread_grp_fu_279_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_279_p0 =  (sc_lv<27>) (OP1_V_reg_936.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_279_p0 =  (sc_lv<27>) (OP1_V_fu_359_p1.read());
    } else {
        grp_fu_279_p0 =  (sc_lv<27>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void biquadv2start::thread_grp_fu_279_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_279_p1 =  (sc_lv<24>) (OP2_V_1_fu_371_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_279_p1 =  (sc_lv<24>) (OP2_V_fu_363_p1.read());
    } else {
        grp_fu_279_p1 =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void biquadv2start::thread_i_V_fu_319_p2() {
    i_V_fu_319_p2 = (!p_s_reg_268.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(p_s_reg_268.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void biquadv2start::thread_inDataLeft_V_trunc_fu_305_p1() {
    inDataLeft_V_trunc_fu_305_p1 = esl_zext<27,24>(inDataLeft_V_read_reg_868.read());
}

void biquadv2start::thread_inDataRight_V_trunc_fu_309_p1() {
    inDataRight_V_trunc_fu_309_p1 = esl_zext<27,24>(inDataRight_V_read_reg_863.read());
}

void biquadv2start::thread_newsignbit_1_fu_622_p3() {
    newsignbit_1_fu_622_p3 = p_Val2_9_fu_616_p2.read().range(23, 23);
}

void biquadv2start::thread_newsignbit_fu_428_p3() {
    newsignbit_fu_428_p3 = p_Val2_4_fu_422_p2.read().range(23, 23);
}

void biquadv2start::thread_outDataLeft_V() {
    outDataLeft_V = p_Val2_s_reg_255.read();
}

void biquadv2start::thread_outDataLeft_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outDataLeft_V_ap_ack.read()))) {
        outDataLeft_V_ap_vld = ap_const_logic_1;
    } else {
        outDataLeft_V_ap_vld = ap_const_logic_0;
    }
}

void biquadv2start::thread_outDataLeft_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        outDataLeft_V_blk_n = outDataLeft_V_ap_ack.read();
    } else {
        outDataLeft_V_blk_n = ap_const_logic_1;
    }
}

void biquadv2start::thread_outDataRight_V() {
    outDataRight_V = p_Val2_5_reg_242.read();
}

void biquadv2start::thread_outDataRight_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_outDataRight_V_ap_ack.read()))) {
        outDataRight_V_ap_vld = ap_const_logic_1;
    } else {
        outDataRight_V_ap_vld = ap_const_logic_0;
    }
}

void biquadv2start::thread_outDataRight_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        outDataRight_V_blk_n = outDataRight_V_ap_ack.read();
    } else {
        outDataRight_V_blk_n = ap_const_logic_1;
    }
}

void biquadv2start::thread_overflow_1_fu_758_p2() {
    overflow_1_fu_758_p2 = (brmerge_i_i1_fu_748_p2.read() & tmp_16_fu_753_p2.read());
}

void biquadv2start::thread_overflow_fu_535_p2() {
    overflow_fu_535_p2 = (brmerge_i_i_fu_525_p2.read() & tmp_9_fu_530_p2.read());
}

void biquadv2start::thread_p_38_i_i1_fu_738_p2() {
    p_38_i_i1_fu_738_p2 = (carry_1_reg_1061.read() & Range1_all_ones_1_reg_1073.read());
}

void biquadv2start::thread_p_38_i_i_fu_515_p2() {
    p_38_i_i_fu_515_p2 = (carry_reg_984.read() & Range1_all_ones_reg_996.read());
}

void biquadv2start::thread_p_41_i_i1_fu_727_p2() {
    p_41_i_i1_fu_727_p2 = (Range2_all_ones_1_reg_1068.read() & tmp_15_fu_721_p2.read());
}

void biquadv2start::thread_p_41_i_i_fu_504_p2() {
    p_41_i_i_fu_504_p2 = (Range2_all_ones_reg_991.read() & tmp_1_fu_498_p2.read());
}

void biquadv2start::thread_p_Val2_2_fu_387_p2() {
    p_Val2_2_fu_387_p2 = (!tmp_8_cast_fu_383_p1.read().is_01() || !reg_301.read().is_01())? sc_lv<51>(): (sc_bigint<51>(tmp_8_cast_fu_383_p1.read()) + sc_biguint<51>(reg_301.read()));
}

void biquadv2start::thread_p_Val2_3_fu_401_p4() {
    p_Val2_3_fu_401_p4 = p_Val2_2_fu_387_p2.read().range(47, 24);
}

void biquadv2start::thread_p_Val2_4_4_fu_695_p3() {
    p_Val2_4_4_fu_695_p3 = (!underflow_reg_1028.read()[0].is_01())? sc_lv<24>(): ((underflow_reg_1028.read()[0].to_bool())? ap_const_lv24_800000: p_Val2_4_reg_972.read());
}

void biquadv2start::thread_p_Val2_4_fu_422_p2() {
    p_Val2_4_fu_422_p2 = (!p_Val2_3_fu_401_p4.read().is_01() || !tmp_5_fu_411_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(p_Val2_3_fu_401_p4.read()) + sc_biguint<24>(tmp_5_fu_411_p1.read()));
}

void biquadv2start::thread_p_Val2_4_mux_fu_689_p3() {
    p_Val2_4_mux_fu_689_p3 = (!brmerge_i_i_i_reg_1033.read()[0].is_01())? sc_lv<24>(): ((brmerge_i_i_i_reg_1033.read()[0].to_bool())? ap_const_lv24_7FFFFF: p_Val2_4_reg_972.read());
}

void biquadv2start::thread_p_Val2_5_trunc_fu_854_p1() {
    p_Val2_5_trunc_fu_854_p1 = esl_zext<27,24>(p_Val2_5_reg_242.read());
}

void biquadv2start::thread_p_Val2_7_fu_581_p2() {
    p_Val2_7_fu_581_p2 = (!tmp_13_cast_fu_577_p1.read().is_01() || !reg_301.read().is_01())? sc_lv<51>(): (sc_bigint<51>(tmp_13_cast_fu_577_p1.read()) + sc_biguint<51>(reg_301.read()));
}

void biquadv2start::thread_p_Val2_8_fu_595_p4() {
    p_Val2_8_fu_595_p4 = p_Val2_7_fu_581_p2.read().range(47, 24);
}

void biquadv2start::thread_p_Val2_9_5_fu_807_p3() {
    p_Val2_9_5_fu_807_p3 = (!underflow_1_reg_1105.read()[0].is_01())? sc_lv<24>(): ((underflow_1_reg_1105.read()[0].to_bool())? ap_const_lv24_800000: p_Val2_9_reg_1049.read());
}

void biquadv2start::thread_p_Val2_9_fu_616_p2() {
    p_Val2_9_fu_616_p2 = (!p_Val2_8_fu_595_p4.read().is_01() || !tmp_11_fu_605_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(p_Val2_8_fu_595_p4.read()) + sc_biguint<24>(tmp_11_fu_605_p1.read()));
}

void biquadv2start::thread_p_Val2_9_mux_fu_801_p3() {
    p_Val2_9_mux_fu_801_p3 = (!brmerge_i_i_i1_reg_1110.read()[0].is_01())? sc_lv<24>(): ((brmerge_i_i_i1_reg_1110.read()[0].to_bool())? ap_const_lv24_7FFFFF: p_Val2_9_reg_1049.read());
}

void biquadv2start::thread_p_Val2_trunc_fu_833_p1() {
    p_Val2_trunc_fu_833_p1 = esl_zext<27,24>(p_Val2_s_reg_255.read());
}

void biquadv2start::thread_p_not_i_i1_fu_742_p2() {
    p_not_i_i1_fu_742_p2 = (deleted_zeros_1_fu_716_p3.read() ^ ap_const_lv1_1);
}

void biquadv2start::thread_p_not_i_i_fu_519_p2() {
    p_not_i_i_fu_519_p2 = (deleted_zeros_fu_493_p3.read() ^ ap_const_lv1_1);
}

void biquadv2start::thread_resultLeft_V_fu_701_p3() {
    resultLeft_V_fu_701_p3 = (!underflow_not_fu_684_p2.read()[0].is_01())? sc_lv<24>(): ((underflow_not_fu_684_p2.read()[0].to_bool())? p_Val2_4_mux_fu_689_p3.read(): p_Val2_4_4_fu_695_p3.read());
}

void biquadv2start::thread_resultRight_V_fu_813_p3() {
    resultRight_V_fu_813_p3 = (!underflow_1_not_fu_796_p2.read()[0].is_01())? sc_lv<24>(): ((underflow_1_not_fu_796_p2.read()[0].to_bool())? p_Val2_9_mux_fu_801_p3.read(): p_Val2_9_5_fu_807_p3.read());
}

void biquadv2start::thread_samples_V_load11_tru_fu_829_p1() {
    samples_V_load11_tru_fu_829_p1 = esl_zext<27,24>(tmp_4_reg_1120.read());
}

void biquadv2start::thread_samples_V_load_114_t_fu_846_p1() {
    samples_V_load_114_t_fu_846_p1 = esl_zext<27,24>(tmp_17_reg_1125.read());
}

void biquadv2start::thread_samples_V_load_217_t_fu_850_p1() {
    samples_V_load_217_t_fu_850_p1 = esl_zext<27,24>(tmp_18_reg_1130.read());
}

void biquadv2start::thread_samples_V_load_320_t_fu_859_p1() {
    samples_V_load_320_t_fu_859_p1 = esl_zext<27,24>(tmp_19_reg_1135.read());
}

void biquadv2start::thread_tmp1_fu_680_p2() {
    tmp1_fu_680_p2 = (brmerge40_demorgan_i_reg_1023.read() | tmp_9_reg_1018.read());
}

void biquadv2start::thread_tmp2_demorgan_fu_769_p2() {
    tmp2_demorgan_fu_769_p2 = (p_38_i_i1_fu_738_p2.read() | brmerge40_demorgan_i_1_fu_764_p2.read());
}

void biquadv2start::thread_tmp2_fu_775_p2() {
    tmp2_fu_775_p2 = (tmp2_demorgan_fu_769_p2.read() ^ ap_const_lv1_1);
}

void biquadv2start::thread_tmp3_fu_792_p2() {
    tmp3_fu_792_p2 = (brmerge40_demorgan_i_1_reg_1100.read() | tmp_16_reg_1095.read());
}

void biquadv2start::thread_tmp_10_fu_569_p3() {
    tmp_10_fu_569_p3 = esl_concat<24,24>(p_Val2_5_reg_242.read(), ap_const_lv24_0);
}

void biquadv2start::thread_tmp_11_fu_605_p1() {
    tmp_11_fu_605_p1 = esl_zext<24,1>(tmp_28_reg_1008.read());
}

void biquadv2start::thread_tmp_12_fu_630_p2() {
    tmp_12_fu_630_p2 = (newsignbit_1_fu_622_p3.read() ^ ap_const_lv1_1);
}

void biquadv2start::thread_tmp_13_cast_fu_577_p1() {
    tmp_13_cast_fu_577_p1 = esl_sext<51,48>(tmp_10_fu_569_p3.read());
}

void biquadv2start::thread_tmp_13_fu_642_p4() {
    tmp_13_fu_642_p4 = p_Val2_7_fu_581_p2.read().range(50, 49);
}

void biquadv2start::thread_tmp_14_fu_658_p4() {
    tmp_14_fu_658_p4 = p_Val2_7_fu_581_p2.read().range(50, 48);
}

void biquadv2start::thread_tmp_15_fu_721_p2() {
    tmp_15_fu_721_p2 = (tmp_31_fu_709_p3.read() ^ ap_const_lv1_1);
}

void biquadv2start::thread_tmp_16_fu_753_p2() {
    tmp_16_fu_753_p2 = (signbit_1_reg_1043.read() ^ ap_const_lv1_1);
}

void biquadv2start::thread_tmp_17_fu_825_p1() {
    tmp_17_fu_825_p1 = array_r_q0.read().range(24-1, 0);
}

void biquadv2start::thread_tmp_18_fu_838_p1() {
    tmp_18_fu_838_p1 = array_r_q0.read().range(24-1, 0);
}

void biquadv2start::thread_tmp_19_fu_842_p1() {
    tmp_19_fu_842_p1 = array_r_q1.read().range(24-1, 0);
}

void biquadv2start::thread_tmp_1_fu_498_p2() {
    tmp_1_fu_498_p2 = (tmp_25_fu_486_p3.read() ^ ap_const_lv1_1);
}

void biquadv2start::thread_tmp_20_fu_345_p1() {
    tmp_20_fu_345_p1 = array_r_q0.read().range(24-1, 0);
}

void biquadv2start::thread_tmp_23_fu_414_p3() {
    tmp_23_fu_414_p3 = p_Val2_2_fu_387_p2.read().range(47, 47);
}

void biquadv2start::thread_tmp_25_fu_486_p3() {
    tmp_25_fu_486_p3 = p_Val2_2_reg_961.read().range(48, 48);
}

void biquadv2start::thread_tmp_26_fu_367_p1() {
    tmp_26_fu_367_p1 = array_r_q1.read().range(24-1, 0);
}

void biquadv2start::thread_tmp_29_fu_608_p3() {
    tmp_29_fu_608_p3 = p_Val2_7_fu_581_p2.read().range(47, 47);
}

void biquadv2start::thread_tmp_2_fu_313_p2() {
    tmp_2_fu_313_p2 = (!p_s_reg_268.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(p_s_reg_268.read() == ap_const_lv3_5);
}

void biquadv2start::thread_tmp_31_fu_709_p3() {
    tmp_31_fu_709_p3 = p_Val2_7_reg_1038.read().range(48, 48);
}

void biquadv2start::thread_tmp_3_cast_fu_330_p1() {
    tmp_3_cast_fu_330_p1 = esl_zext<4,3>(p_s_reg_268.read());
}

void biquadv2start::thread_tmp_3_fu_325_p1() {
    tmp_3_fu_325_p1 = esl_zext<32,3>(p_s_reg_268.read());
}

void biquadv2start::thread_tmp_4_fu_821_p1() {
    tmp_4_fu_821_p1 = array_r_q1.read().range(24-1, 0);
}

void biquadv2start::thread_tmp_5_fu_411_p1() {
    tmp_5_fu_411_p1 = esl_zext<24,1>(tmp_22_reg_951.read());
}

void biquadv2start::thread_tmp_6_fu_448_p4() {
    tmp_6_fu_448_p4 = p_Val2_2_fu_387_p2.read().range(50, 49);
}

void biquadv2start::thread_tmp_7_fu_464_p4() {
    tmp_7_fu_464_p4 = p_Val2_2_fu_387_p2.read().range(50, 48);
}

void biquadv2start::thread_tmp_8_cast_fu_383_p1() {
    tmp_8_cast_fu_383_p1 = esl_sext<51,48>(tmp_8_fu_375_p3.read());
}

void biquadv2start::thread_tmp_8_fu_375_p3() {
    tmp_8_fu_375_p3 = esl_concat<24,24>(p_Val2_s_reg_255.read(), ap_const_lv24_0);
}

void biquadv2start::thread_tmp_9_fu_530_p2() {
    tmp_9_fu_530_p2 = (signbit_reg_966.read() ^ ap_const_lv1_1);
}

void biquadv2start::thread_tmp_demorgan_fu_546_p2() {
    tmp_demorgan_fu_546_p2 = (p_38_i_i_fu_515_p2.read() | brmerge40_demorgan_i_fu_541_p2.read());
}

void biquadv2start::thread_tmp_fu_552_p2() {
    tmp_fu_552_p2 = (tmp_demorgan_fu_546_p2.read() ^ ap_const_lv1_1);
}

void biquadv2start::thread_tmp_s_fu_436_p2() {
    tmp_s_fu_436_p2 = (newsignbit_fu_428_p3.read() ^ ap_const_lv1_1);
}

void biquadv2start::thread_underflow_1_fu_781_p2() {
    underflow_1_fu_781_p2 = (signbit_1_reg_1043.read() & tmp2_fu_775_p2.read());
}

void biquadv2start::thread_underflow_1_not_fu_796_p2() {
    underflow_1_not_fu_796_p2 = (tmp3_fu_792_p2.read() | p_38_i_i1_reg_1090.read());
}

void biquadv2start::thread_underflow_fu_558_p2() {
    underflow_fu_558_p2 = (signbit_reg_966.read() & tmp_fu_552_p2.read());
}

void biquadv2start::thread_underflow_not_fu_684_p2() {
    underflow_not_fu_684_p2 = (tmp1_fu_680_p2.read() | p_38_i_i_reg_1013.read());
}

void biquadv2start::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_2_fu_313_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_block_state16_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

void biquadv2start::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"outDataLeft_V\" :  \"" << outDataLeft_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outDataLeft_V_ap_vld\" :  \"" << outDataLeft_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outDataLeft_V_ap_ack\" :  \"" << outDataLeft_V_ap_ack.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outDataRight_V\" :  \"" << outDataRight_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outDataRight_V_ap_vld\" :  \"" << outDataRight_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outDataRight_V_ap_ack\" :  \"" << outDataRight_V_ap_ack.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_biquadv2_AWVALID\" :  \"" << s_axi_biquadv2_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_biquadv2_AWREADY\" :  \"" << s_axi_biquadv2_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_biquadv2_AWADDR\" :  \"" << s_axi_biquadv2_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_biquadv2_WVALID\" :  \"" << s_axi_biquadv2_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_biquadv2_WREADY\" :  \"" << s_axi_biquadv2_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_biquadv2_WDATA\" :  \"" << s_axi_biquadv2_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_biquadv2_WSTRB\" :  \"" << s_axi_biquadv2_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_biquadv2_ARVALID\" :  \"" << s_axi_biquadv2_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_biquadv2_ARREADY\" :  \"" << s_axi_biquadv2_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_biquadv2_ARADDR\" :  \"" << s_axi_biquadv2_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_biquadv2_RVALID\" :  \"" << s_axi_biquadv2_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_biquadv2_RREADY\" :  \"" << s_axi_biquadv2_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_biquadv2_RDATA\" :  \"" << s_axi_biquadv2_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_biquadv2_RRESP\" :  \"" << s_axi_biquadv2_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_biquadv2_BVALID\" :  \"" << s_axi_biquadv2_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_biquadv2_BREADY\" :  \"" << s_axi_biquadv2_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_biquadv2_BRESP\" :  \"" << s_axi_biquadv2_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

